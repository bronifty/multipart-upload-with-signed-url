{
 "Resources": {
  "notesAF81B09D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "noteId",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "noteId",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/notes/Resource"
   }
  },
  "endpointE7B9679B": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "endpoint"
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Resource"
   }
  },
  "endpointCloudWatchRole52213BC3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/CloudWatchRole/Resource"
   }
  },
  "endpointAccount6DA1D142": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "endpointCloudWatchRole52213BC3",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "endpointE7B9679B"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Account"
   }
  },
  "endpointDeployment457D977D2b3307eba3c7fe1a36b3de6fe09a0bb0": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "DependsOn": [
    "endpointnotesidDELETEAD0C5CAD",
    "endpointnotesidGETDA67C376",
    "endpointnotesidOPTIONS6939D830",
    "endpointnotesidPUTA29F9F3F",
    "endpointnotesid284FFD82",
    "endpointnotesGETFA0BD3D8",
    "endpointnotesPOST22F9725C",
    "endpointnotesF7F33EB6"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Deployment/Resource"
   }
  },
  "endpointDeploymentStageprod2CD5F9C4": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "endpointDeployment457D977D2b3307eba3c7fe1a36b3de6fe09a0bb0"
    },
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "endpointAccount6DA1D142"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/DeploymentStage.prod/Resource"
   }
  },
  "endpointnotesF7F33EB6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "endpointE7B9679B",
      "RootResourceId"
     ]
    },
    "PathPart": "notes",
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/Resource"
   }
  },
  "endpointnotesGETApiPermissionawssdkjsnotesappendpointB9DE46D1GETnotesDAB79BA2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "list55E002CE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/",
       {
        "Ref": "endpointDeploymentStageprod2CD5F9C4"
       },
       "/GET/notes"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/GET/ApiPermission.awssdkjsnotesappendpointB9DE46D1.GET..notes"
   }
  },
  "endpointnotesGETApiPermissionTestawssdkjsnotesappendpointB9DE46D1GETnotes509F954A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "list55E002CE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/test-invoke-stage/GET/notes"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/GET/ApiPermission.Test.awssdkjsnotesappendpointB9DE46D1.GET..notes"
   }
  },
  "endpointnotesGETFA0BD3D8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "list55E002CE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "endpointnotesF7F33EB6"
    },
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/GET/Resource"
   }
  },
  "endpointnotesPOSTApiPermissionawssdkjsnotesappendpointB9DE46D1POSTnotes829BAAF9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "create1A0F2F2D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/",
       {
        "Ref": "endpointDeploymentStageprod2CD5F9C4"
       },
       "/POST/notes"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/POST/ApiPermission.awssdkjsnotesappendpointB9DE46D1.POST..notes"
   }
  },
  "endpointnotesPOSTApiPermissionTestawssdkjsnotesappendpointB9DE46D1POSTnotes786D34A1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "create1A0F2F2D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/test-invoke-stage/POST/notes"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/POST/ApiPermission.Test.awssdkjsnotesappendpointB9DE46D1.POST..notes"
   }
  },
  "endpointnotesPOST22F9725C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "create1A0F2F2D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "endpointnotesF7F33EB6"
    },
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/POST/Resource"
   }
  },
  "endpointnotesid284FFD82": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "endpointnotesF7F33EB6"
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/Resource"
   }
  },
  "endpointnotesidOPTIONS6939D830": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "endpointnotesid284FFD82"
    },
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/OPTIONS/Resource"
   }
  },
  "endpointnotesidGETApiPermissionawssdkjsnotesappendpointB9DE46D1GETnotesidDD0753B4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "get868C1774",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/",
       {
        "Ref": "endpointDeploymentStageprod2CD5F9C4"
       },
       "/GET/notes/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/GET/ApiPermission.awssdkjsnotesappendpointB9DE46D1.GET..notes.{id}"
   }
  },
  "endpointnotesidGETApiPermissionTestawssdkjsnotesappendpointB9DE46D1GETnotesidBE3C12BB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "get868C1774",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/test-invoke-stage/GET/notes/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/GET/ApiPermission.Test.awssdkjsnotesappendpointB9DE46D1.GET..notes.{id}"
   }
  },
  "endpointnotesidGETDA67C376": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "get868C1774",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "endpointnotesid284FFD82"
    },
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/GET/Resource"
   }
  },
  "endpointnotesidPUTApiPermissionawssdkjsnotesappendpointB9DE46D1PUTnotesidCBABA7E8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "update20AF9D86",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/",
       {
        "Ref": "endpointDeploymentStageprod2CD5F9C4"
       },
       "/PUT/notes/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/PUT/ApiPermission.awssdkjsnotesappendpointB9DE46D1.PUT..notes.{id}"
   }
  },
  "endpointnotesidPUTApiPermissionTestawssdkjsnotesappendpointB9DE46D1PUTnotesidD4090601": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "update20AF9D86",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/test-invoke-stage/PUT/notes/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/PUT/ApiPermission.Test.awssdkjsnotesappendpointB9DE46D1.PUT..notes.{id}"
   }
  },
  "endpointnotesidPUTA29F9F3F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "update20AF9D86",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "endpointnotesid284FFD82"
    },
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/PUT/Resource"
   }
  },
  "endpointnotesidDELETEApiPermissionawssdkjsnotesappendpointB9DE46D1DELETEnotesidB0EE57FD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteA4D1022C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/",
       {
        "Ref": "endpointDeploymentStageprod2CD5F9C4"
       },
       "/DELETE/notes/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/DELETE/ApiPermission.awssdkjsnotesappendpointB9DE46D1.DELETE..notes.{id}"
   }
  },
  "endpointnotesidDELETEApiPermissionTestawssdkjsnotesappendpointB9DE46D1DELETEnotesidB609D3F0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteA4D1022C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "endpointE7B9679B"
       },
       "/test-invoke-stage/DELETE/notes/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/DELETE/ApiPermission.Test.awssdkjsnotesappendpointB9DE46D1.DELETE..notes.{id}"
   }
  },
  "endpointnotesidDELETEAD0C5CAD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "deleteA4D1022C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "endpointnotesid284FFD82"
    },
    "RestApiId": {
     "Ref": "endpointE7B9679B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/endpoint/Default/notes/{id}/DELETE/Resource"
   }
  },
  "listlistlambdarole1B2D45E8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Lambda to access DynamoDB"
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/list/list-lambda-role/Resource"
   }
  },
  "listlistlambdaroleDefaultPolicy6D04A7BE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:Scan",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "notesAF81B09D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "listlistlambdaroleDefaultPolicy6D04A7BE",
    "Roles": [
     {
      "Ref": "listlistlambdarole1B2D45E8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/list/list-lambda-role/DefaultPolicy/Resource"
   }
  },
  "list55E002CE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "48b623076991fd0e8e24e35def1b035813beaca90d83837c8a112536fdc0ad32.zip"
    },
    "Environment": {
     "Variables": {
      "NOTES_TABLE_NAME": {
       "Ref": "notesAF81B09D"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "listlistlambdarole1B2D45E8",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "listlistlambdaroleDefaultPolicy6D04A7BE",
    "listlistlambdarole1B2D45E8"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/list/list/Resource",
    "aws:asset:path": "asset.48b623076991fd0e8e24e35def1b035813beaca90d83837c8a112536fdc0ad32",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "createcreatelambdarole32B95856": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Lambda to access DynamoDB"
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/create/create-lambda-role/Resource"
   }
  },
  "createcreatelambdaroleDefaultPolicy93B51975": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:PutItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "notesAF81B09D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "createcreatelambdaroleDefaultPolicy93B51975",
    "Roles": [
     {
      "Ref": "createcreatelambdarole32B95856"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/create/create-lambda-role/DefaultPolicy/Resource"
   }
  },
  "create1A0F2F2D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "847107be44c212eed71531c98aebab516bab0b5eedbfd0f782d9d3968e07bd1e.zip"
    },
    "Environment": {
     "Variables": {
      "NOTES_TABLE_NAME": {
       "Ref": "notesAF81B09D"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "createcreatelambdarole32B95856",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "createcreatelambdaroleDefaultPolicy93B51975",
    "createcreatelambdarole32B95856"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/create/create/Resource",
    "aws:asset:path": "asset.847107be44c212eed71531c98aebab516bab0b5eedbfd0f782d9d3968e07bd1e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "getgetlambdaroleA0B52ED5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Lambda to access DynamoDB"
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/get/get-lambda-role/Resource"
   }
  },
  "getgetlambdaroleDefaultPolicy8E5BE844": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "notesAF81B09D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getgetlambdaroleDefaultPolicy8E5BE844",
    "Roles": [
     {
      "Ref": "getgetlambdaroleA0B52ED5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/get/get-lambda-role/DefaultPolicy/Resource"
   }
  },
  "get868C1774": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1058fb889b5e27ddd4226dab665f10246b73c4d2c01a171d2916718dbb9d1534.zip"
    },
    "Environment": {
     "Variables": {
      "NOTES_TABLE_NAME": {
       "Ref": "notesAF81B09D"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "getgetlambdaroleA0B52ED5",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "getgetlambdaroleDefaultPolicy8E5BE844",
    "getgetlambdaroleA0B52ED5"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/get/get/Resource",
    "aws:asset:path": "asset.1058fb889b5e27ddd4226dab665f10246b73c4d2c01a171d2916718dbb9d1534",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "updateupdatelambdarole746C985D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Lambda to access DynamoDB"
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/update/update-lambda-role/Resource"
   }
  },
  "updateupdatelambdaroleDefaultPolicy0B550DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:UpdateItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "notesAF81B09D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "updateupdatelambdaroleDefaultPolicy0B550DEB",
    "Roles": [
     {
      "Ref": "updateupdatelambdarole746C985D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/update/update-lambda-role/DefaultPolicy/Resource"
   }
  },
  "update20AF9D86": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d73189b80a59b449d9a9ce72dfb5c06b4c1ea80f053f7aa9e04e25bada60558f.zip"
    },
    "Environment": {
     "Variables": {
      "NOTES_TABLE_NAME": {
       "Ref": "notesAF81B09D"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "updateupdatelambdarole746C985D",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "updateupdatelambdaroleDefaultPolicy0B550DEB",
    "updateupdatelambdarole746C985D"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/update/update/Resource",
    "aws:asset:path": "asset.d73189b80a59b449d9a9ce72dfb5c06b4c1ea80f053f7aa9e04e25bada60558f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "deletedeletelambdaroleC5003F30": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Lambda to access DynamoDB"
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/delete/delete-lambda-role/Resource"
   }
  },
  "deletedeletelambdaroleDefaultPolicy21DFBF00": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:DeleteItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "notesAF81B09D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "deletedeletelambdaroleDefaultPolicy21DFBF00",
    "Roles": [
     {
      "Ref": "deletedeletelambdaroleC5003F30"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/delete/delete-lambda-role/DefaultPolicy/Resource"
   }
  },
  "deleteA4D1022C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d1727a54203e09e38327427ca8ac439ce41ea932671edb2264ef05abb9a4438b.zip"
    },
    "Environment": {
     "Variables": {
      "NOTES_TABLE_NAME": {
       "Ref": "notesAF81B09D"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "deletedeletelambdaroleC5003F30",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "deletedeletelambdaroleDefaultPolicy21DFBF00",
    "deletedeletelambdaroleC5003F30"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/delete/delete/Resource",
    "aws:asset:path": "asset.d1727a54203e09e38327427ca8ac439ce41ea932671edb2264ef05abb9a4438b",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "filesbucket2B30D8E0": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "PUT",
        "GET",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/files-bucket/Resource"
   }
  },
  "identitypool": {
   "Type": "AWS::Cognito::IdentityPool",
   "Properties": {
    "AllowUnauthenticatedIdentities": true
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/identity-pool"
   }
  },
  "unauthenticatedroleEE7E3E0D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "cognito-identity.amazonaws.com:aud": {
          "Ref": "identitypool"
         }
        },
        "ForAnyValue:StringLike": {
         "cognito-identity.amazonaws.com:amr": "unauthenticated"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": "cognito-identity.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonPollyFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/unauthenticated-role/Resource"
   }
  },
  "unauthenticatedroleDefaultPolicy2436F037": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject",
        "s3:DeleteObject"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "filesbucket2B30D8E0",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "transcribe:StartStreamTranscriptionWebSocket",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "unauthenticatedroleDefaultPolicy2436F037",
    "Roles": [
     {
      "Ref": "unauthenticatedroleEE7E3E0D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/unauthenticated-role/DefaultPolicy/Resource"
   }
  },
  "roleattachment": {
   "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
   "Properties": {
    "IdentityPoolId": {
     "Ref": "identitypool"
    },
    "Roles": {
     "unauthenticated": {
      "Fn::GetAtt": [
       "unauthenticatedroleEE7E3E0D",
       "Arn"
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/role-attachment"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12QwW7CMAyGn4V7yBjdCxSmSRy2obI7cpNQDG1cYWeoivruU5qhwU7+ftuyf3upn4sXvZjBlefGnuct1jruBMxZwZX30Q4eOrK1jl9Qt06tD36CUUGPDYi7wqBj5VjKHlP1DktjKHhRr65vaeicl5S9UzuBZhqZoXJM4WLcCvhP/M7M/O7kSDalMo0KodOxouxsiltq0QxJZhpVC11tQceUcpcOmZF8angL3giSv7XsPVl3Yv0xhVtVcbEHZiesyxQUFzqugjk7mZxmTPMyjcpQ41Fo2rixzgvKsCVq1T+d/JYiYI7pHeP4cPRnkD6Imlam/6BvHn6xPvg1eYv5gORcn/jpe7nUhV7MTow4vwQv2Dld5fgDaIS3cuwBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "aws-sdk-js-notes-app/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "endpointEndpoint5E1E9134": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "endpointE7B9679B"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "endpointDeploymentStageprod2CD5F9C4"
      },
      "/"
     ]
    ]
   }
  },
  "FilesBucket": {
   "Value": {
    "Ref": "filesbucket2B30D8E0"
   }
  },
  "GatewayUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "endpointE7B9679B"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "endpointDeploymentStageprod2CD5F9C4"
      },
      "/"
     ]
    ]
   }
  },
  "IdentityPoolId": {
   "Value": {
    "Ref": "identitypool"
   }
  },
  "Region": {
   "Value": {
    "Ref": "AWS::Region"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}